package com.epienriz.hengruicao.wifidatacollector;

import android.content.Context;
import android.content.res.TypedArray;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Rect;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.text.TextPaint;
import android.util.AttributeSet;
import android.view.View;

import com.android.volley.VolleyError;
import com.android.volley.toolbox.ImageLoader;
import com.epienriz.hengruicao.wifidatacollector.api.VolleySingleton;

/**
 * TODO: document your custom view class.
 */
public class AutoGeneratedView extends View {
    private Bitmap mExampleDrawable;

    private ImageLoader mImageLoader;

    public AutoGeneratedView(Context context) {
        super(context);
        init(null, 0);
    }

    public AutoGeneratedView(Context context, AttributeSet attrs) {
        super(context, attrs);
        init(attrs, 0);
    }

    public AutoGeneratedView(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
        init(attrs, defStyle);
    }

    private void init(AttributeSet attrs, int defStyle) {
        mImageLoader = VolleySingleton.getInstance(getContext()).getImageLoader();

            mImageLoader.get("http://pathadvisor.ust.hk/map_pixel.php?x=1000&y=1000&floor=G&level=1", new ImageLoader.ImageListener() {
                @Override
                public void onResponse(ImageLoader.ImageContainer response, boolean isImmediate) {
                    mExampleDrawable = response.getBitmap();
                    invalidate();
                }

                @Override
                public void onErrorResponse(VolleyError error) {

                }
            });
    }

    @Override
    protected void onDraw(Canvas canvas) {
        super.onDraw(canvas);

        // TODO: consider storing these as member variables to reduce
        // allocations per draw cycle.
        int paddingLeft = getPaddingLeft();
        int paddingTop = getPaddingTop();
        int paddingRight = getPaddingRight();
        int paddingBottom = getPaddingBottom();

        int contentWidth = getWidth() - paddingLeft - paddingRight;
        int contentHeight = getHeight() - paddingTop - paddingBottom;

        // Draw the example drawable on top of the text.
        if (mExampleDrawable != null) {
            canvas.drawBitmap(mExampleDrawable, null, new Rect(paddingLeft, paddingTop,
                    paddingLeft + contentWidth, paddingTop + contentHeight), null);
        }
    }
}
